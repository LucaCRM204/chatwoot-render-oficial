{"version":3,"file":"PreChatForm-Bn08hdyU.js","sources":["../../../app/javascript/widget/components/Form/PhoneInput.vue","../../../app/javascript/widget/components/PreChat/Form.vue","../../../app/javascript/widget/views/PreChatForm.vue"],"sourcesContent":["<script setup>\r\nimport { ref, computed, watch, useTemplateRef, nextTick, unref } from 'vue';\r\nimport countriesList from 'shared/constants/countries.js';\r\nimport FluentIcon from 'shared/components/FluentIcon/Index.vue';\r\nimport {\r\n  getActiveCountryCode,\r\n  getActiveDialCode,\r\n} from 'shared/components/PhoneInput/helper';\r\n\r\nconst { context } = defineProps({\r\n  context: {\r\n    type: Object,\r\n    default: () => ({}),\r\n  },\r\n});\r\n\r\nconst localValue = ref(context.value || '');\r\n\r\nconst selectedIndex = ref(-1);\r\nconst showDropdown = ref(false);\r\nconst searchCountry = ref('');\r\nconst activeCountryCode = ref(getActiveCountryCode());\r\nconst activeDialCode = ref(getActiveDialCode());\r\nconst phoneNumber = ref('');\r\n\r\nconst dropdownRef = useTemplateRef('dropdownRef');\r\nconst searchbarRef = useTemplateRef('searchbarRef');\r\n\r\nconst placeholder = computed(() => context?.attrs?.placeholder || '');\r\nconst hasErrorInPhoneInput = computed(() => context?.state?.invalid);\r\nconst dropdownFirstItemName = computed(() =>\r\n  activeCountryCode.value ? 'Clear selection' : 'Select Country'\r\n);\r\nconst countries = computed(() => [\r\n  {\r\n    name: dropdownFirstItemName.value,\r\n    dial_code: '',\r\n    emoji: '',\r\n    id: '',\r\n  },\r\n  ...countriesList,\r\n]);\r\n\r\nconst items = computed(() => {\r\n  return countries.value.filter(country => {\r\n    const { name, dial_code, id } = country;\r\n    const search = searchCountry.value.toLowerCase();\r\n    return (\r\n      name.toLowerCase().includes(search) ||\r\n      dial_code.toLowerCase().includes(search) ||\r\n      id.toLowerCase().includes(search)\r\n    );\r\n  });\r\n});\r\n\r\nconst activeCountry = computed(() => {\r\n  return countries.value.find(\r\n    country => country.id === activeCountryCode.value\r\n  );\r\n});\r\n\r\nwatch(items, newItems => {\r\n  if (newItems.length < selectedIndex.value + 1) {\r\n    // Reset the selected index to 0 if the new items length is less than the selected index.\r\n    selectedIndex.value = 0;\r\n  }\r\n});\r\n\r\nfunction setContextValue(code) {\r\n  const safeCode = unref(code);\r\n  // This function is used to set the context value.\r\n  // The context value is used to set the value of the phone number field in the pre-chat form.\r\n  localValue.value = `${safeCode}${phoneNumber.value}`;\r\n  context.node.input(localValue.value);\r\n}\r\n\r\nfunction onChange(e) {\r\n  phoneNumber.value = e.target.value;\r\n  // This function is used to set the context value when the user types in the phone number field.\r\n  setContextValue(activeDialCode.value);\r\n}\r\n\r\nfunction focusedOrActiveItem(className) {\r\n  // This function is used to get the focused or active item in the dropdown.\r\n  if (!showDropdown.value) return [];\r\n  return Array.from(\r\n    dropdownRef.value?.querySelectorAll(\r\n      `div.country-dropdown div.country-dropdown--item.${className}`\r\n    )\r\n  );\r\n}\r\n\r\nfunction scrollToFocusedOrActiveItem(item) {\r\n  // This function is used to scroll the dropdown to the focused or active item.\r\n  const focusedOrActiveItemLocal = item;\r\n  if (focusedOrActiveItemLocal.length > 0) {\r\n    const dropdown = dropdownRef.value;\r\n    const dropdownHeight = dropdown.clientHeight;\r\n    const itemTop = focusedOrActiveItemLocal[0]?.offsetTop;\r\n    const itemHeight = focusedOrActiveItemLocal[0]?.offsetHeight;\r\n    const scrollPosition = itemTop - dropdownHeight / 2 + itemHeight / 2;\r\n    dropdown.scrollTo({\r\n      top: scrollPosition,\r\n      behavior: 'auto',\r\n    });\r\n  }\r\n}\r\n\r\nfunction adjustScroll() {\r\n  nextTick(() => {\r\n    scrollToFocusedOrActiveItem(focusedOrActiveItem('focus'));\r\n  });\r\n}\r\n\r\nfunction adjustSelection(direction) {\r\n  if (!showDropdown.value) return;\r\n  const maxIndex = items.value.length - 1;\r\n  if (direction === 'up') {\r\n    selectedIndex.value =\r\n      selectedIndex.value <= 0 ? maxIndex : selectedIndex.value - 1;\r\n  } else if (direction === 'down') {\r\n    selectedIndex.value =\r\n      selectedIndex.value >= maxIndex ? 0 : selectedIndex.value + 1;\r\n  }\r\n  adjustScroll();\r\n}\r\n\r\nfunction moveSelectionUp() {\r\n  adjustSelection('up');\r\n}\r\nfunction moveSelectionDown() {\r\n  adjustSelection('down');\r\n}\r\n\r\nfunction closeDropdown() {\r\n  selectedIndex.value = -1;\r\n  showDropdown.value = false;\r\n}\r\n\r\nfunction onSelectCountry(country) {\r\n  activeCountryCode.value = country.id;\r\n  searchCountry.value = '';\r\n  activeDialCode.value = country.dial_code ? country.dial_code : '';\r\n  setContextValue(country.dial_code);\r\n  closeDropdown();\r\n}\r\n\r\nfunction toggleCountryDropdown() {\r\n  showDropdown.value = !showDropdown.value;\r\n  selectedIndex.value = -1;\r\n  if (showDropdown.value) {\r\n    nextTick(() => {\r\n      searchbarRef.value.focus();\r\n      // This is used to scroll the dropdown to the active item.\r\n      scrollToFocusedOrActiveItem(focusedOrActiveItem('active'));\r\n    });\r\n  }\r\n}\r\n\r\nfunction onSelect() {\r\n  if (!showDropdown.value || selectedIndex.value === -1) return;\r\n  onSelectCountry(items.value[selectedIndex.value]);\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"relative mt-2 phone-input--wrap\">\r\n    <div\r\n      class=\"flex items-center justify-start outline-none phone-input rounded-lg box-border bg-n-background dark:bg-n-alpha-2 border-none outline outline-1 outline-offset-[-1px] text-sm w-full text-n-slate-12 focus-within:outline-n-brand focus-within:ring-1 focus-within:ring-n-brand\"\r\n      :class=\"{\r\n        'outline-n-ruby-8 dark:outline-n-ruby-8 hover:outline-n-ruby-9 dark:hover:outline-n-ruby-9':\r\n          hasErrorInPhoneInput,\r\n        'outline-n-weak': !hasErrorInPhoneInput,\r\n      }\"\r\n    >\r\n      <div\r\n        class=\"flex items-center justify-between h-[2.625rem] px-2 py-2 cursor-pointer bg-n-alpha-1 dark:bg-n-solid-1 ltr:rounded-bl-lg rtl:rounded-br-lg ltr:rounded-tl-lg rtl:rounded-tr-lg min-w-[3.6rem] w-[3.6rem]\"\r\n        @click=\"toggleCountryDropdown\"\r\n      >\r\n        <h5 v-if=\"activeCountry.emoji\" class=\"mb-0 text-xl\">\r\n          {{ activeCountry.emoji }}\r\n        </h5>\r\n        <FluentIcon v-else icon=\"globe\" class=\"fluent-icon\" size=\"20\" />\r\n        <FluentIcon icon=\"chevron-down\" class=\"fluent-icon\" size=\"12\" />\r\n      </div>\r\n      <span\r\n        v-if=\"activeDialCode\"\r\n        class=\"py-2 ltr:pl-2 rtl:pr-2 text-base text-n-slate-11\"\r\n      >\r\n        {{ activeDialCode }}\r\n      </span>\r\n      <input\r\n        :value=\"phoneNumber\"\r\n        type=\"phoneInput\"\r\n        class=\"w-full h-full !py-3 pl-2 pr-3 leading-tight rounded-r !outline-none focus:!ring-0 !bg-transparent dark:!bg-transparent\"\r\n        name=\"phoneNumber\"\r\n        :placeholder=\"placeholder\"\r\n        @input=\"onChange\"\r\n        @blur=\"context.blurHandler\"\r\n      />\r\n    </div>\r\n    <div\r\n      v-if=\"showDropdown\"\r\n      ref=\"dropdownRef\"\r\n      v-on-clickaway=\"closeDropdown\"\r\n      class=\"country-dropdown absolute bg-n-background text-n-slate-12 dark:bg-n-solid-3 z-10 h-48 px-0 pt-0 pb-1 pl-1 pr-1 overflow-y-auto rounded-lg shadow-lg top-12 w-full min-w-24 max-w-[14.8rem]\"\r\n      @keydown.up=\"moveSelectionUp\"\r\n      @keydown.down=\"moveSelectionDown\"\r\n      @keydown.enter=\"onSelect\"\r\n    >\r\n      <div\r\n        class=\"sticky top-0 bg-n-background text-n-slate-12 dark:bg-n-solid-3\"\r\n      >\r\n        <input\r\n          ref=\"searchbarRef\"\r\n          v-model=\"searchCountry\"\r\n          type=\"text\"\r\n          :placeholder=\"$t('PRE_CHAT_FORM.FIELDS.PHONE_NUMBER.DROPDOWN_SEARCH')\"\r\n          class=\"w-full h-8 !ring-0 px-3 py-2 mt-1 mb-1 text-sm rounded bg-n-alpha-black2\"\r\n        />\r\n      </div>\r\n      <div\r\n        v-for=\"(country, index) in items\"\r\n        :key=\"index\"\r\n        class=\"flex items-center h-8 px-2 py-2 rounded cursor-pointer country-dropdown--item text-n-slate-12 dark:hover:bg-n-solid-2 hover:bg-n-alpha-2\"\r\n        :class=\"[\r\n          country.id === activeCountryCode &&\r\n            'active bg-n-alpha-1 dark:bg-n-solid-1',\r\n          index === selectedIndex && 'focus dark:bg-n-solid-2 bg-n-alpha-2',\r\n        ]\"\r\n        @click=\"onSelectCountry(country)\"\r\n      >\r\n        <span v-if=\"country.emoji\" class=\"mr-2 text-xl\">{{\r\n          country.emoji\r\n        }}</span>\r\n        <span class=\"text-sm leading-5 truncate\">\r\n          {{ country.name }}\r\n        </span>\r\n        <span class=\"ml-2 text-xs\">{{ country.dial_code }}</span>\r\n      </div>\r\n      <div v-if=\"items.length === 0\">\r\n        <span\r\n          class=\"flex justify-center mt-4 text-sm text-center text-n-slate-11\"\r\n        >\r\n          {{ $t('PRE_CHAT_FORM.FIELDS.PHONE_NUMBER.DROPDOWN_EMPTY') }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n","<script>\r\nimport CustomButton from 'shared/components/Button.vue';\r\nimport Spinner from 'shared/components/Spinner.vue';\r\nimport { mapGetters } from 'vuex';\r\nimport { getContrastingTextColor } from '@chatwoot/utils';\r\nimport { isEmptyObject } from 'widget/helpers/utils';\r\nimport { getRegexp } from 'shared/helpers/Validators';\r\nimport { useMessageFormatter } from 'shared/composables/useMessageFormatter';\r\nimport routerMixin from 'widget/mixins/routerMixin';\r\nimport configMixin from 'widget/mixins/configMixin';\r\nimport { FormKit, createInput } from '@formkit/vue';\r\nimport PhoneInput from 'widget/components/Form/PhoneInput.vue';\r\n\r\nexport default {\r\n  components: {\r\n    CustomButton,\r\n    Spinner,\r\n    FormKit,\r\n  },\r\n  mixins: [routerMixin, configMixin],\r\n  props: {\r\n    options: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n  },\r\n  emits: ['submitPreChat'],\r\n  setup() {\r\n    const phoneInput = createInput(PhoneInput, {\r\n      props: ['hasErrorInPhoneInput'],\r\n    });\r\n    const { formatMessage } = useMessageFormatter();\r\n\r\n    return { formatMessage, phoneInput };\r\n  },\r\n  data() {\r\n    return {\r\n      locale: this.$root.$i18n.locale,\r\n      hasErrorInPhoneInput: false,\r\n      message: '',\r\n      formValues: {},\r\n      labels: {\r\n        emailAddress: 'EMAIL_ADDRESS',\r\n        fullName: 'FULL_NAME',\r\n        phoneNumber: 'PHONE_NUMBER',\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      widgetColor: 'appConfig/getWidgetColor',\r\n      isCreating: 'conversation/getIsCreating',\r\n      isConversationRouting: 'appConfig/getIsUpdatingRoute',\r\n      activeCampaign: 'campaign/getActiveCampaign',\r\n      currentUser: 'contacts/getCurrentUser',\r\n    }),\r\n    isCreatingConversation() {\r\n      return this.isCreating || this.isConversationRouting;\r\n    },\r\n    textColor() {\r\n      return getContrastingTextColor(this.widgetColor);\r\n    },\r\n    hasActiveCampaign() {\r\n      return !isEmptyObject(this.activeCampaign);\r\n    },\r\n    shouldShowHeaderMessage() {\r\n      return (\r\n        this.hasActiveCampaign ||\r\n        (this.preChatFormEnabled && !!this.headerMessage)\r\n      );\r\n    },\r\n    headerMessage() {\r\n      if (this.preChatFormEnabled) {\r\n        return this.options.preChatMessage;\r\n      }\r\n      if (this.hasActiveCampaign) {\r\n        return this.$t('PRE_CHAT_FORM.CAMPAIGN_HEADER');\r\n      }\r\n      return '';\r\n    },\r\n    preChatFields() {\r\n      return this.preChatFormEnabled ? this.options.preChatFields : [];\r\n    },\r\n    filteredPreChatFields() {\r\n      const isUserEmailAvailable = this.currentUser.has_email;\r\n      const isUserPhoneNumberAvailable = this.currentUser.has_phone_number;\r\n      const isUserIdentifierAvailable = !!this.currentUser.identifier;\r\n\r\n      const isUserNameAvailable = !!(\r\n        isUserIdentifierAvailable ||\r\n        isUserEmailAvailable ||\r\n        isUserPhoneNumberAvailable\r\n      );\r\n      return this.preChatFields.filter(field => {\r\n        if (isUserEmailAvailable && field.name === 'emailAddress') {\r\n          return false;\r\n        }\r\n        if (isUserPhoneNumberAvailable && field.name === 'phoneNumber') {\r\n          return false;\r\n        }\r\n        if (isUserNameAvailable && field.name === 'fullName') {\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n    },\r\n    enabledPreChatFields() {\r\n      return this.filteredPreChatFields\r\n        .filter(field => field.enabled)\r\n        .map(field => ({\r\n          ...field,\r\n          type:\r\n            field.name === 'phoneNumber'\r\n              ? this.phoneInput\r\n              : this.findFieldType(field.type),\r\n        }));\r\n    },\r\n    conversationCustomAttributes() {\r\n      let conversationAttributes = {};\r\n      this.enabledPreChatFields.forEach(field => {\r\n        if (field.field_type === 'conversation_attribute') {\r\n          conversationAttributes = {\r\n            ...conversationAttributes,\r\n            [field.name]: this.getValue(field),\r\n          };\r\n        }\r\n      });\r\n      return conversationAttributes;\r\n    },\r\n    contactCustomAttributes() {\r\n      let contactAttributes = {};\r\n      this.enabledPreChatFields.forEach(field => {\r\n        if (field.field_type === 'contact_attribute') {\r\n          contactAttributes = {\r\n            ...contactAttributes,\r\n            [field.name]: this.getValue(field),\r\n          };\r\n        }\r\n      });\r\n      return contactAttributes;\r\n    },\r\n  },\r\n  methods: {\r\n    labelClass(input) {\r\n      const { state } = input.context;\r\n      const hasErrors = state.invalid;\r\n      return !hasErrors ? 'text-n-slate-12' : 'text-n-ruby-10';\r\n    },\r\n    inputClass(input) {\r\n      const { state, family: classification, type } = input.context;\r\n      const hasErrors = state.invalid;\r\n      if (classification === 'box' && type === 'checkbox') {\r\n        return '';\r\n      }\r\n      if (type === 'phoneInput') {\r\n        this.hasErrorInPhoneInput = hasErrors;\r\n      }\r\n      if (!hasErrors) {\r\n        return `mt-1 rounded w-full py-2 px-3`;\r\n      }\r\n      return `mt-1 rounded w-full py-2 px-3 error`;\r\n    },\r\n    isContactFieldRequired(field) {\r\n      return this.preChatFields.find(option => option.name === field).required;\r\n    },\r\n    getLabel({ label }) {\r\n      return label;\r\n    },\r\n    getPlaceHolder({ placeholder }) {\r\n      return placeholder;\r\n    },\r\n    getValue({ name, type }) {\r\n      if (type === 'select') {\r\n        return this.enabledPreChatFields.find(option => option.name === name)\r\n          .values[this.formValues[name]];\r\n      }\r\n      return this.formValues[name] || null;\r\n    },\r\n    getValidation({ type, name, field_type, regex_pattern }) {\r\n      let regex = regex_pattern ? getRegexp(regex_pattern) : null;\r\n      const validations = {\r\n        emailAddress: 'email',\r\n        phoneNumber: ['startsWithPlus', 'isValidPhoneNumber'],\r\n        url: 'url',\r\n        date: 'date',\r\n        text: null,\r\n        select: null,\r\n        number: null,\r\n        checkbox: false,\r\n        contact_attribute: regex ? [['matches', regex]] : null,\r\n        conversation_attribute: regex ? [['matches', regex]] : null,\r\n      };\r\n      const validationKeys = Object.keys(validations);\r\n      const isRequired = this.isContactFieldRequired(name);\r\n      const validation = isRequired ? ['required'] : ['optional'];\r\n\r\n      if (\r\n        validationKeys.includes(name) ||\r\n        validationKeys.includes(type) ||\r\n        validationKeys.includes(field_type)\r\n      ) {\r\n        const validationType =\r\n          validations[type] || validations[name] || validations[field_type];\r\n        const allValidations = validationType\r\n          ? validation.concat(validationType)\r\n          : validation;\r\n        return allValidations.join('|');\r\n      }\r\n\r\n      return '';\r\n    },\r\n    findFieldType(type) {\r\n      if (type === 'link') {\r\n        return 'url';\r\n      }\r\n      if (type === 'list') {\r\n        return 'select';\r\n      }\r\n\r\n      return type;\r\n    },\r\n    getOptions(item) {\r\n      if (item.type === 'select') {\r\n        let values = {};\r\n        item.values.forEach((value, index) => {\r\n          values = {\r\n            ...values,\r\n            [index]: value,\r\n          };\r\n        });\r\n        return values;\r\n      }\r\n      return {};\r\n    },\r\n    onSubmit() {\r\n      const { emailAddress, fullName, phoneNumber, message } = this.formValues;\r\n      this.$emit('submitPreChat', {\r\n        fullName,\r\n        phoneNumber,\r\n        emailAddress,\r\n        message,\r\n        activeCampaignId: this.activeCampaign.id,\r\n        conversationCustomAttributes: this.conversationCustomAttributes,\r\n        contactCustomAttributes: this.contactCustomAttributes,\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <!-- hide the default submit button for now -->\r\n  <FormKit\r\n    v-model=\"formValues\"\r\n    type=\"form\"\r\n    form-class=\"flex flex-col flex-1 w-full p-6 overflow-y-auto\"\r\n    :incomplete-message=\"false\"\r\n    :submit-attrs=\"{\r\n      inputClass: 'hidden',\r\n      wrapperClass: 'hidden',\r\n    }\"\r\n    @submit=\"onSubmit\"\r\n  >\r\n    <div\r\n      v-if=\"shouldShowHeaderMessage\"\r\n      v-dompurify-html=\"formatMessage(headerMessage, false)\"\r\n      class=\"mb-4 text-base leading-5 text-n-slate-12 [&>p>.link]:text-n-blue-text [&>p>.link]:hover:underline\"\r\n    />\r\n    <!-- Why do the v-bind shenanigan? Because Formkit API is really bad.\r\n    If we just pass the options as is even with null or undefined or false,\r\n    it assumes we are trying to make a multicheckbox. This is the best we have for now -->\r\n    <FormKit\r\n      v-for=\"item in enabledPreChatFields\"\r\n      :key=\"item.name\"\r\n      :name=\"item.name\"\r\n      :type=\"item.type\"\r\n      :label=\"getLabel(item)\"\r\n      :placeholder=\"getPlaceHolder(item)\"\r\n      :validation=\"getValidation(item)\"\r\n      v-bind=\"\r\n        item.type === 'select'\r\n          ? {\r\n              options: getOptions(item),\r\n            }\r\n          : undefined\r\n      \"\r\n      :label-class=\"context => `text-sm font-medium ${labelClass(context)}`\"\r\n      :input-class=\"context => inputClass(context)\"\r\n      :validation-messages=\"{\r\n        startsWithPlus: $t(\r\n          'PRE_CHAT_FORM.FIELDS.PHONE_NUMBER.DIAL_CODE_VALID_ERROR'\r\n        ),\r\n        isValidPhoneNumber: $t('PRE_CHAT_FORM.FIELDS.PHONE_NUMBER.VALID_ERROR'),\r\n        email: $t('PRE_CHAT_FORM.FIELDS.EMAIL_ADDRESS.VALID_ERROR'),\r\n        required: $t('PRE_CHAT_FORM.REQUIRED'),\r\n        matches: item.regex_cue\r\n          ? item.regex_cue\r\n          : $t('PRE_CHAT_FORM.REGEX_ERROR'),\r\n      }\"\r\n      :has-error-in-phone-input=\"hasErrorInPhoneInput\"\r\n    />\r\n    <FormKit\r\n      v-if=\"!hasActiveCampaign\"\r\n      name=\"message\"\r\n      type=\"textarea\"\r\n      :label-class=\"context => `text-sm font-medium ${labelClass(context)}`\"\r\n      :input-class=\"context => inputClass(context)\"\r\n      :label=\"$t('PRE_CHAT_FORM.FIELDS.MESSAGE.LABEL')\"\r\n      :placeholder=\"$t('PRE_CHAT_FORM.FIELDS.MESSAGE.PLACEHOLDER')\"\r\n      validation=\"required\"\r\n      :validation-messages=\"{\r\n        required: $t('PRE_CHAT_FORM.FIELDS.MESSAGE.ERROR'),\r\n      }\"\r\n    />\r\n\r\n    <CustomButton\r\n      class=\"mt-3 mb-5 font-medium flex items-center justify-center gap-2\"\r\n      block\r\n      :bg-color=\"widgetColor\"\r\n      :text-color=\"textColor\"\r\n      :disabled=\"isCreatingConversation\"\r\n    >\r\n      <Spinner v-if=\"isCreatingConversation\" class=\"p-0\" />\r\n      {{ $t('START_CONVERSATION') }}\r\n    </CustomButton>\r\n  </FormKit>\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n.formkit-outer {\r\n  @apply mt-2;\r\n\r\n  .formkit-inner {\r\n    input.error,\r\n    textarea.error,\r\n    select.error {\r\n      @apply outline-n-ruby-8 dark:outline-n-ruby-8 hover:outline-n-ruby-9 dark:hover:outline-n-ruby-9 focus:outline-n-ruby-9 dark:focus:outline-n-ruby-9;\r\n    }\r\n\r\n    input[type='checkbox'] {\r\n      @apply size-4 outline-none;\r\n    }\r\n  }\r\n}\r\n\r\n[data-invalid] .formkit-message {\r\n  @apply text-n-ruby-10 block text-xs font-normal my-0.5 w-full;\r\n}\r\n\r\n.formkit-outer[data-type='checkbox'] .formkit-wrapper {\r\n  @apply flex items-center gap-2 px-0.5;\r\n}\r\n\r\n.formkit-messages {\r\n  @apply list-none m-0 p-0;\r\n}\r\n</style>\r\n","<script>\r\nimport PreChatForm from '../components/PreChat/Form.vue';\r\nimport configMixin from '../mixins/configMixin';\r\nimport routerMixin from '../mixins/routerMixin';\r\nimport { isEmptyObject } from 'widget/helpers/utils';\r\nimport { ON_CONVERSATION_CREATED } from '../constants/widgetBusEvents';\r\nimport { emitter } from 'shared/helpers/mitt';\r\n\r\nexport default {\r\n  components: {\r\n    PreChatForm,\r\n  },\r\n  mixins: [configMixin, routerMixin],\r\n  mounted() {\r\n    // Register event listener for conversation creation\r\n    emitter.on(ON_CONVERSATION_CREATED, this.handleConversationCreated);\r\n  },\r\n  beforeUnmount() {\r\n    emitter.off(ON_CONVERSATION_CREATED, this.handleConversationCreated);\r\n  },\r\n  methods: {\r\n    handleConversationCreated() {\r\n      // Redirect to messages page after conversation is created\r\n      this.replaceRoute('messages');\r\n      // Only after successful navigation, reset the isUpdatingRoute UIflag in app/javascript/widget/router.js\r\n      // See issue: https://github.com/chatwoot/chatwoot/issues/10736\r\n    },\r\n\r\n    onSubmit({\r\n      fullName,\r\n      emailAddress,\r\n      message,\r\n      activeCampaignId,\r\n      phoneNumber,\r\n      contactCustomAttributes,\r\n      conversationCustomAttributes,\r\n    }) {\r\n      if (activeCampaignId) {\r\n        emitter.emit('execute-campaign', {\r\n          campaignId: activeCampaignId,\r\n          customAttributes: conversationCustomAttributes,\r\n        });\r\n        this.$store.dispatch('contacts/update', {\r\n          user: {\r\n            email: emailAddress,\r\n            name: fullName,\r\n            phone_number: phoneNumber,\r\n          },\r\n        });\r\n      } else {\r\n        this.$store.dispatch('conversation/createConversation', {\r\n          fullName: fullName,\r\n          emailAddress: emailAddress,\r\n          message: message,\r\n          phoneNumber: phoneNumber,\r\n          customAttributes: conversationCustomAttributes,\r\n        });\r\n      }\r\n      if (!isEmptyObject(contactCustomAttributes)) {\r\n        this.$store.dispatch(\r\n          'contacts/setCustomAttributes',\r\n          contactCustomAttributes\r\n        );\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex flex-1 overflow-auto\">\r\n    <PreChatForm :options=\"preChatFormOptions\" @submit-pre-chat=\"onSubmit\" />\r\n  </div>\r\n</template>\r\n"],"names":["localValue","ref","__props","selectedIndex","showDropdown","searchCountry","activeCountryCode","getActiveCountryCode","activeDialCode","getActiveDialCode","phoneNumber","dropdownRef","useTemplateRef","searchbarRef","placeholder","computed","_b","_a","hasErrorInPhoneInput","dropdownFirstItemName","countries","countriesList","items","country","name","dial_code","id","search","activeCountry","watch","newItems","setContextValue","code","safeCode","unref","onChange","e","focusedOrActiveItem","className","scrollToFocusedOrActiveItem","item","focusedOrActiveItemLocal","dropdown","dropdownHeight","itemTop","itemHeight","scrollPosition","adjustScroll","nextTick","adjustSelection","direction","maxIndex","moveSelectionUp","moveSelectionDown","closeDropdown","onSelectCountry","toggleCountryDropdown","onSelect","_sfc_main","CustomButton","Spinner","FormKit","routerMixin","configMixin","phoneInput","createInput","PhoneInput","formatMessage","useMessageFormatter","mapGetters","getContrastingTextColor","isEmptyObject","isUserEmailAvailable","isUserPhoneNumberAvailable","isUserNameAvailable","field","conversationAttributes","contactAttributes","input","state","classification","type","hasErrors","option","label","field_type","regex_pattern","regex","getRegexp","validations","validationKeys","validation","validationType","values","value","index","emailAddress","fullName","message","_createBlock","_component_FormKit","$data","_cache","$event","$options","_withCtx","_withDirectives","_openBlock","_createElementBlock","_hoisted_1","_directive_dompurify_html","$setup","_createCommentVNode","_Fragment","_renderList","_mergeProps","context","_ctx","_createVNode","_component_CustomButton","_component_Spinner","_createTextVNode","PreChatForm","emitter","ON_CONVERSATION_CREATED","activeCampaignId","contactCustomAttributes","conversationCustomAttributes","_component_PreChatForm"],"mappings":"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"}