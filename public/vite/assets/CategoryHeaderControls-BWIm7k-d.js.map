{"version":3,"mappings":"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","names":["props","__props","emit","__emit","EmojiInput","defineAsyncComponent","__vitePreload","t","useI18n","route","useRoute","getters","useStoreGetters","isCreating","useMapGetter","isUpdatingCategory","computed","id","_a","_b","isEmojiPickerOpen","ref","state","reactive","isEditMode","rules","required","minLength","v$","useVuelidate","isSubmitDisabled","nameError","slugError","slugHelpText","portalSlug","locale","onClickInsertEmoji","emoji","handleSubmit","handleCancel","watch","convertToCategorySlug","newCategory","name","icon","slug","description","onMounted","__expose","store","useStore","handleCategory","formData","categoryData","action","payload","successMessage","useAlert","trackEvent","PORTALS_EVENTS","useTrack","error","errorMessage","router","useRouter","isLocaleMenuOpen","isCreateCategoryDialogOpen","isEditCategoryDialogOpen","currentPortalSlug","currentPortal","currentPortalName","activeLocale","activeLocaleName","activeLocaleCode","localeMenuItems","selectedCategory","category","selectedCategoryName","selectedCategoryCount","selectedCategoryEmoji","categoriesCount","breadcrumbItems","items","handleLocaleAction","value","handleBreadcrumbClick","categorySlug","otherParams"],"ignoreList":[],"sources":["../../../app/javascript/dashboard/components-next/HelpCenter/Pages/CategoryPage/CategoryForm.vue","../../../app/javascript/dashboard/components-next/HelpCenter/Pages/CategoryPage/CategoryDialog.vue","../../../app/javascript/dashboard/components-next/HelpCenter/Pages/CategoryPage/CategoryHeaderControls.vue"],"sourcesContent":["<script setup>\r\nimport {\r\n  reactive,\r\n  ref,\r\n  watch,\r\n  computed,\r\n  defineAsyncComponent,\r\n  onMounted,\r\n} from 'vue';\r\nimport { useI18n } from 'vue-i18n';\r\nimport { OnClickOutside } from '@vueuse/components';\r\nimport { useStoreGetters, useMapGetter } from 'dashboard/composables/store';\r\nimport { useRoute } from 'vue-router';\r\nimport { useVuelidate } from '@vuelidate/core';\r\nimport { required, minLength } from '@vuelidate/validators';\r\nimport { convertToCategorySlug } from 'dashboard/helper/commons.js';\r\n\r\nimport Input from 'dashboard/components-next/input/Input.vue';\r\nimport TextArea from 'dashboard/components-next/textarea/TextArea.vue';\r\nimport Button from 'dashboard/components-next/button/Button.vue';\r\n\r\nconst props = defineProps({\r\n  mode: {\r\n    type: String,\r\n    required: true,\r\n    validator: value => ['edit', 'create'].includes(value),\r\n  },\r\n  selectedCategory: {\r\n    type: Object,\r\n    default: () => ({}),\r\n  },\r\n  activeLocaleCode: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n  showActionButtons: {\r\n    type: Boolean,\r\n    default: true,\r\n  },\r\n  portalName: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n  activeLocaleName: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n});\r\n\r\nconst emit = defineEmits(['submit', 'cancel']);\r\n\r\nconst EmojiInput = defineAsyncComponent(\r\n  () => import('shared/components/emoji/EmojiInput.vue')\r\n);\r\n\r\nconst { t } = useI18n();\r\nconst route = useRoute();\r\nconst getters = useStoreGetters();\r\n\r\nconst isCreating = useMapGetter('categories/isCreating');\r\n\r\nconst isUpdatingCategory = computed(() => {\r\n  const id = props.selectedCategory?.id;\r\n  if (id) return getters['categories/uiFlags'].value(id)?.isUpdating;\r\n\r\n  return false;\r\n});\r\n\r\nconst isEmojiPickerOpen = ref(false);\r\n\r\nconst state = reactive({\r\n  id: '',\r\n  name: '',\r\n  icon: '',\r\n  slug: '',\r\n  description: '',\r\n  locale: '',\r\n});\r\n\r\nconst isEditMode = computed(() => props.mode === 'edit');\r\n\r\nconst rules = {\r\n  name: { required, minLength: minLength(1) },\r\n  slug: { required },\r\n};\r\n\r\nconst v$ = useVuelidate(rules, state);\r\n\r\nconst isSubmitDisabled = computed(() => v$.value.$invalid);\r\n\r\nconst nameError = computed(() =>\r\n  v$.value.name.$error\r\n    ? t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.FORM.NAME.ERROR')\r\n    : ''\r\n);\r\n\r\nconst slugError = computed(() =>\r\n  v$.value.slug.$error\r\n    ? t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.FORM.SLUG.ERROR')\r\n    : ''\r\n);\r\n\r\nconst slugHelpText = computed(() => {\r\n  const { portalSlug, locale } = route.params;\r\n  return t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.FORM.SLUG.HELP_TEXT', {\r\n    portalSlug,\r\n    localeCode: locale,\r\n    categorySlug: state.slug,\r\n  });\r\n});\r\n\r\nconst onClickInsertEmoji = emoji => {\r\n  state.icon = emoji;\r\n  isEmojiPickerOpen.value = false;\r\n};\r\n\r\nconst handleSubmit = async () => {\r\n  const isFormCorrect = await v$.value.$validate();\r\n  if (!isFormCorrect) return;\r\n\r\n  emit('submit', { ...state });\r\n};\r\n\r\nconst handleCancel = () => {\r\n  emit('cancel');\r\n};\r\n\r\nwatch(\r\n  () => state.name,\r\n  () => {\r\n    if (!isEditMode.value) {\r\n      state.slug = convertToCategorySlug(state.name);\r\n    }\r\n  }\r\n);\r\n\r\nwatch(\r\n  () => props.selectedCategory,\r\n  newCategory => {\r\n    if (props.mode === 'edit' && newCategory) {\r\n      const { id, name, icon, slug, description } = newCategory;\r\n      Object.assign(state, { id, name, icon, slug, description });\r\n    }\r\n  },\r\n  { immediate: true }\r\n);\r\n\r\nonMounted(() => {\r\n  if (props.mode === 'create') {\r\n    state.locale = props.activeLocaleCode;\r\n  }\r\n});\r\n\r\ndefineExpose({ state, isSubmitDisabled });\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex flex-col gap-4\">\r\n    <div\r\n      class=\"flex items-center justify-start gap-8 px-4 py-2 border rounded-lg border-n-strong\"\r\n    >\r\n      <div class=\"flex flex-col items-start w-full gap-2 py-2\">\r\n        <span class=\"text-sm font-medium text-n-slate-11\">\r\n          {{ t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.HEADER.PORTAL') }}\r\n        </span>\r\n        <span class=\"text-sm text-n-slate-12\">\r\n          {{ portalName }}\r\n        </span>\r\n      </div>\r\n      <div class=\"justify-start w-px h-10 bg-n-strong\" />\r\n      <div class=\"flex flex-col w-full gap-2 py-2\">\r\n        <span class=\"text-sm font-medium text-n-slate-11\">\r\n          {{ t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.HEADER.LOCALE') }}\r\n        </span>\r\n        <span\r\n          :title=\"`${activeLocaleName} (${activeLocaleCode})`\"\r\n          class=\"text-sm line-clamp-1 text-n-slate-12\"\r\n        >\r\n          {{ `${activeLocaleName} (${activeLocaleCode})` }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex flex-col gap-4\">\r\n      <div class=\"relative\">\r\n        <Input\r\n          v-model=\"state.name\"\r\n          :label=\"\r\n            t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.FORM.NAME.LABEL')\r\n          \"\r\n          :placeholder=\"\r\n            t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.FORM.NAME.PLACEHOLDER')\r\n          \"\r\n          :message=\"nameError\"\r\n          :message-type=\"nameError ? 'error' : 'info'\"\r\n          custom-input-class=\"!h-10 ltr:!pl-12 rtl:!pr-12\"\r\n        >\r\n          <template #prefix>\r\n            <OnClickOutside @trigger=\"isEmojiPickerOpen = false\">\r\n              <Button\r\n                :label=\"state.icon\"\r\n                color=\"slate\"\r\n                size=\"sm\"\r\n                type=\"button\"\r\n                :icon=\"!state.icon ? 'i-lucide-smile-plus' : ''\"\r\n                class=\"!h-[2.4rem] !w-[2.375rem] absolute top-[1.94rem] !outline-none !rounded-[0.438rem] border-0 ltr:left-px rtl:right-px ltr:!rounded-r-none rtl:!rounded-l-none\"\r\n                @click=\"isEmojiPickerOpen = !isEmojiPickerOpen\"\r\n              />\r\n              <EmojiInput\r\n                v-if=\"isEmojiPickerOpen\"\r\n                class=\"left-0 top-16\"\r\n                show-remove-button\r\n                :on-click=\"onClickInsertEmoji\"\r\n              />\r\n            </OnClickOutside>\r\n          </template>\r\n        </Input>\r\n      </div>\r\n      <Input\r\n        v-model=\"state.slug\"\r\n        :label=\"t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.FORM.SLUG.LABEL')\"\r\n        :placeholder=\"\r\n          t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.FORM.SLUG.PLACEHOLDER')\r\n        \"\r\n        :disabled=\"isEditMode\"\r\n        :message=\"slugError ? slugError : slugHelpText\"\r\n        :message-type=\"slugError ? 'error' : 'info'\"\r\n        custom-input-class=\"!h-10\"\r\n      />\r\n      <TextArea\r\n        v-model=\"state.description\"\r\n        :label=\"\r\n          t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.FORM.DESCRIPTION.LABEL')\r\n        \"\r\n        :placeholder=\"\r\n          t(\r\n            'HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.FORM.DESCRIPTION.PLACEHOLDER'\r\n          )\r\n        \"\r\n        show-character-count\r\n      />\r\n      <div\r\n        v-if=\"showActionButtons\"\r\n        class=\"flex items-center justify-between w-full gap-3\"\r\n      >\r\n        <Button\r\n          variant=\"faded\"\r\n          color=\"slate\"\r\n          :label=\"t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.BUTTONS.CANCEL')\"\r\n          class=\"w-full bg-n-alpha-2 n-blue-text hover:bg-n-alpha-3\"\r\n          @click=\"handleCancel\"\r\n        />\r\n        <Button\r\n          :label=\"\r\n            t(\r\n              `HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.BUTTONS.${mode.toUpperCase()}`\r\n            )\r\n          \"\r\n          class=\"w-full\"\r\n          :disabled=\"isSubmitDisabled || isCreating || isUpdatingCategory\"\r\n          :is-loading=\"isCreating || isUpdatingCategory\"\r\n          @click=\"handleSubmit\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n.emoji-dialog::before {\r\n  @apply hidden;\r\n}\r\n</style>\r\n","<script setup>\r\nimport { useI18n } from 'vue-i18n';\r\nimport { useStore } from 'dashboard/composables/store';\r\nimport { useAlert, useTrack } from 'dashboard/composables';\r\nimport { useRoute } from 'vue-router';\r\nimport { PORTALS_EVENTS } from 'dashboard/helper/AnalyticsHelper/events';\r\n\r\nimport CategoryForm from 'dashboard/components-next/HelpCenter/Pages/CategoryPage/CategoryForm.vue';\r\n\r\nconst props = defineProps({\r\n  mode: {\r\n    type: String,\r\n    default: 'edit',\r\n    validator: value => ['edit', 'create'].includes(value),\r\n  },\r\n  selectedCategory: {\r\n    type: Object,\r\n    default: () => ({}),\r\n  },\r\n  portalName: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n  activeLocaleName: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n  activeLocaleCode: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n});\r\n\r\nconst emit = defineEmits(['close']);\r\n\r\nconst store = useStore();\r\nconst { t } = useI18n();\r\nconst route = useRoute();\r\n\r\nconst handleCategory = async formData => {\r\n  const { id, name, slug, icon, description, locale } = formData;\r\n  const categoryData = { name, icon, slug, description };\r\n\r\n  if (props.mode === 'create') {\r\n    categoryData.locale = locale;\r\n  } else {\r\n    categoryData.id = id;\r\n  }\r\n\r\n  try {\r\n    const action = props.mode === 'edit' ? 'update' : 'create';\r\n    const payload = {\r\n      portalSlug: route.params.portalSlug,\r\n      categoryObj: categoryData,\r\n    };\r\n\r\n    if (action === 'update') {\r\n      payload.categoryId = id;\r\n    }\r\n\r\n    await store.dispatch(`categories/${action}`, payload);\r\n\r\n    const successMessage = t(\r\n      `HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.${props.mode.toUpperCase()}.API.SUCCESS_MESSAGE`\r\n    );\r\n    useAlert(successMessage);\r\n\r\n    const trackEvent =\r\n      props.mode === 'edit'\r\n        ? PORTALS_EVENTS.EDIT_CATEGORY\r\n        : PORTALS_EVENTS.CREATE_CATEGORY;\r\n    useTrack(\r\n      trackEvent,\r\n      props.mode === 'create'\r\n        ? { hasDescription: Boolean(description) }\r\n        : undefined\r\n    );\r\n\r\n    emit('close');\r\n  } catch (error) {\r\n    const errorMessage =\r\n      error?.message ||\r\n      t(\r\n        `HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.${props.mode.toUpperCase()}.API.ERROR_MESSAGE`\r\n      );\r\n    useAlert(errorMessage);\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    class=\"w-[25rem] absolute top-10 ltr:right-0 rtl:left-0 bg-n-alpha-3 backdrop-blur-[100px] p-6 rounded-xl border border-slate-50 dark:border-slate-900 shadow-md flex flex-col gap-6\"\r\n  >\r\n    <h3 class=\"text-base font-medium text-slate-900 dark:text-slate-50\">\r\n      {{\r\n        t(\r\n          `HELP_CENTER.CATEGORY_PAGE.CATEGORY_DIALOG.HEADER.${mode.toUpperCase()}`\r\n        )\r\n      }}\r\n    </h3>\r\n    <CategoryForm\r\n      :mode=\"mode\"\r\n      :selected-category=\"selectedCategory\"\r\n      :active-locale-code=\"activeLocaleCode\"\r\n      :portal-name=\"portalName\"\r\n      :active-locale-name=\"activeLocaleName\"\r\n      @submit=\"handleCategory\"\r\n      @cancel=\"emit('close')\"\r\n    />\r\n  </div>\r\n</template>\r\n","<script setup>\r\nimport { ref, computed } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { useI18n } from 'vue-i18n';\r\nimport { OnClickOutside } from '@vueuse/components';\r\nimport { useStoreGetters } from 'dashboard/composables/store.js';\r\n\r\nimport Button from 'dashboard/components-next/button/Button.vue';\r\nimport Breadcrumb from 'dashboard/components-next/breadcrumb/Breadcrumb.vue';\r\nimport DropdownMenu from 'dashboard/components-next/dropdown-menu/DropdownMenu.vue';\r\nimport CategoryDialog from 'dashboard/components-next/HelpCenter/Pages/CategoryPage/CategoryDialog.vue';\r\n\r\nconst props = defineProps({\r\n  categories: {\r\n    type: Array,\r\n    default: () => [],\r\n  },\r\n  allowedLocales: {\r\n    type: Array,\r\n    default: () => [],\r\n  },\r\n  hasSelectedCategory: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n});\r\n\r\nconst emit = defineEmits(['localeChange']);\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst getters = useStoreGetters();\r\nconst { t } = useI18n();\r\n\r\nconst isLocaleMenuOpen = ref(false);\r\nconst isCreateCategoryDialogOpen = ref(false);\r\nconst isEditCategoryDialogOpen = ref(false);\r\n\r\nconst currentPortalSlug = computed(() => {\r\n  return route.params.portalSlug;\r\n});\r\n\r\nconst currentPortal = computed(() => {\r\n  const slug = currentPortalSlug.value;\r\n  if (slug) return getters['portals/portalBySlug'].value(slug);\r\n\r\n  return getters['portals/allPortals'].value[0];\r\n});\r\n\r\nconst currentPortalName = computed(() => {\r\n  return currentPortal.value?.name;\r\n});\r\n\r\nconst activeLocale = computed(() => {\r\n  return props.allowedLocales.find(\r\n    locale => locale.code === route.params.locale\r\n  );\r\n});\r\n\r\nconst activeLocaleName = computed(() => activeLocale.value?.name ?? '');\r\nconst activeLocaleCode = computed(() => activeLocale.value?.code ?? '');\r\n\r\nconst localeMenuItems = computed(() => {\r\n  return props.allowedLocales.map(locale => ({\r\n    label: locale.name,\r\n    value: locale.code,\r\n    action: 'filter',\r\n  }));\r\n});\r\n\r\nconst selectedCategory = computed(() =>\r\n  props.categories.find(category => category.slug === route.params.categorySlug)\r\n);\r\n\r\nconst selectedCategoryName = computed(() => {\r\n  return selectedCategory.value?.name;\r\n});\r\n\r\nconst selectedCategoryCount = computed(\r\n  () => selectedCategory.value?.meta?.articles_count || 0\r\n);\r\n\r\nconst selectedCategoryEmoji = computed(() => {\r\n  return selectedCategory.value?.icon;\r\n});\r\n\r\nconst categoriesCount = computed(() => props.categories?.length);\r\n\r\nconst breadcrumbItems = computed(() => {\r\n  const items = [\r\n    {\r\n      label: t(\r\n        'HELP_CENTER.CATEGORY_PAGE.CATEGORY_HEADER.BREADCRUMB.CATEGORY_LOCALE',\r\n        { localeCode: activeLocaleCode.value }\r\n      ),\r\n      link: '#',\r\n    },\r\n  ];\r\n  if (selectedCategory.value) {\r\n    items.push({\r\n      label: t(\r\n        'HELP_CENTER.CATEGORY_PAGE.CATEGORY_HEADER.BREADCRUMB.ACTIVE_CATEGORY',\r\n        {\r\n          categoryName: selectedCategoryName.value,\r\n          categoryCount: selectedCategoryCount.value,\r\n        }\r\n      ),\r\n      emoji: selectedCategoryEmoji.value,\r\n    });\r\n  }\r\n  return items;\r\n});\r\n\r\nconst handleLocaleAction = ({ value }) => {\r\n  emit('localeChange', value);\r\n  isLocaleMenuOpen.value = false;\r\n};\r\n\r\nconst handleBreadcrumbClick = () => {\r\n  const { categorySlug, ...otherParams } = route.params;\r\n  router.push({\r\n    name: 'portals_categories_index',\r\n    params: otherParams,\r\n  });\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex items-center justify-between w-full\">\r\n    <div v-if=\"!hasSelectedCategory\" class=\"flex items-center gap-4\">\r\n      <div class=\"relative group\">\r\n        <OnClickOutside @trigger=\"isLocaleMenuOpen = false\">\r\n          <Button\r\n            :label=\"activeLocaleName\"\r\n            size=\"sm\"\r\n            trailing-icon\r\n            icon=\"i-lucide-chevron-down\"\r\n            color=\"slate\"\r\n            @click=\"isLocaleMenuOpen = !isLocaleMenuOpen\"\r\n          />\r\n          <DropdownMenu\r\n            v-if=\"isLocaleMenuOpen\"\r\n            :menu-items=\"localeMenuItems\"\r\n            show-search\r\n            class=\"left-0 w-40 mt-2 overflow-y-auto xl:right-0 top-full max-h-60\"\r\n            @action=\"handleLocaleAction\"\r\n          />\r\n        </OnClickOutside>\r\n      </div>\r\n      <div class=\"w-px h-3.5 rounded my-auto bg-slate-75 dark:bg-slate-800\" />\r\n      <span\r\n        class=\"min-w-0 text-sm font-medium truncate text-slate-800 dark:text-slate-100\"\r\n      >\r\n        {{\r\n          t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_HEADER.CATEGORIES_COUNT', {\r\n            n: categoriesCount,\r\n          })\r\n        }}\r\n      </span>\r\n    </div>\r\n    <Breadcrumb\r\n      v-else\r\n      :items=\"breadcrumbItems\"\r\n      @click=\"handleBreadcrumbClick\"\r\n    />\r\n    <div v-if=\"!hasSelectedCategory\" class=\"relative\">\r\n      <OnClickOutside @trigger=\"isCreateCategoryDialogOpen = false\">\r\n        <Button\r\n          :label=\"t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_HEADER.NEW_CATEGORY')\"\r\n          icon=\"i-lucide-plus\"\r\n          size=\"sm\"\r\n          @click=\"isCreateCategoryDialogOpen = !isCreateCategoryDialogOpen\"\r\n        />\r\n        <CategoryDialog\r\n          v-if=\"isCreateCategoryDialogOpen\"\r\n          mode=\"create\"\r\n          :portal-name=\"currentPortalName\"\r\n          :active-locale-name=\"activeLocaleName\"\r\n          :active-locale-code=\"activeLocaleCode\"\r\n          @close=\"isCreateCategoryDialogOpen = false\"\r\n        />\r\n      </OnClickOutside>\r\n    </div>\r\n    <div v-else class=\"relative\">\r\n      <OnClickOutside @trigger=\"isEditCategoryDialogOpen = false\">\r\n        <Button\r\n          :label=\"t('HELP_CENTER.CATEGORY_PAGE.CATEGORY_HEADER.EDIT_CATEGORY')\"\r\n          color=\"slate\"\r\n          size=\"sm\"\r\n          @click=\"isEditCategoryDialogOpen = !isEditCategoryDialogOpen\"\r\n        />\r\n        <CategoryDialog\r\n          v-if=\"isEditCategoryDialogOpen\"\r\n          :selected-category=\"selectedCategory\"\r\n          :portal-name=\"currentPortalName\"\r\n          :active-locale-name=\"activeLocaleName\"\r\n          :active-locale-code=\"activeLocaleCode\"\r\n          @close=\"isEditCategoryDialogOpen = false\"\r\n        />\r\n      </OnClickOutside>\r\n    </div>\r\n  </div>\r\n</template>\r\n"],"file":"assets/CategoryHeaderControls-BWIm7k-d.js"}