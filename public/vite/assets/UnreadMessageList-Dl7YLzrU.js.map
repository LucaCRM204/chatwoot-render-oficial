{"version":3,"file":"UnreadMessageList-Dl7YLzrU.js","sources":["../../../app/javascript/widget/components/UnreadMessage.vue","../../../app/javascript/widget/components/UnreadMessageList.vue"],"sourcesContent":["<script>\r\nimport { useMessageFormatter } from 'shared/composables/useMessageFormatter';\r\nimport Thumbnail from 'dashboard/components/widgets/Thumbnail.vue';\r\nimport configMixin from '../mixins/configMixin';\r\nimport { isEmptyObject } from 'widget/helpers/utils';\r\nimport {\r\n  ON_CAMPAIGN_MESSAGE_CLICK,\r\n  ON_UNREAD_MESSAGE_CLICK,\r\n} from '../constants/widgetBusEvents';\r\nimport { emitter } from 'shared/helpers/mitt';\r\n\r\nexport default {\r\n  name: 'UnreadMessage',\r\n  components: { Thumbnail },\r\n  mixins: [configMixin],\r\n  props: {\r\n    message: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    showSender: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    sender: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    campaignId: {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n  },\r\n  setup() {\r\n    const { formatMessage, getPlainText, truncateMessage, highlightContent } =\r\n      useMessageFormatter();\r\n    return {\r\n      formatMessage,\r\n      getPlainText,\r\n      truncateMessage,\r\n      highlightContent,\r\n    };\r\n  },\r\n  computed: {\r\n    companyName() {\r\n      return `${this.$t('UNREAD_VIEW.COMPANY_FROM')} ${\r\n        this.channelConfig.websiteName\r\n      }`;\r\n    },\r\n    avatarUrl() {\r\n      // eslint-disable-next-line\r\n      const displayImage = this.useInboxAvatarForBot\r\n        ? this.inboxAvatarUrl\r\n        : '/assets/images/chatwoot_bot.png';\r\n      if (this.isSenderExist(this.sender)) {\r\n        const { avatar_url: avatarUrl } = this.sender;\r\n        return avatarUrl;\r\n      }\r\n      return displayImage;\r\n    },\r\n    agentName() {\r\n      if (this.isSenderExist(this.sender)) {\r\n        const { available_name: availableName } = this.sender;\r\n        return availableName;\r\n      }\r\n      if (this.useInboxAvatarForBot) {\r\n        return this.channelConfig.websiteName;\r\n      }\r\n      return this.$t('UNREAD_VIEW.BOT');\r\n    },\r\n    availabilityStatus() {\r\n      if (this.isSenderExist(this.sender)) {\r\n        const { availability_status: availabilityStatus } = this.sender;\r\n        return availabilityStatus;\r\n      }\r\n      return null;\r\n    },\r\n  },\r\n  methods: {\r\n    isSenderExist(sender) {\r\n      return sender && !isEmptyObject(sender);\r\n    },\r\n    onClickMessage() {\r\n      if (this.campaignId) {\r\n        emitter.emit(ON_CAMPAIGN_MESSAGE_CLICK, this.campaignId);\r\n      } else {\r\n        emitter.emit(ON_UNREAD_MESSAGE_CLICK);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"chat-bubble-wrap\">\r\n    <button class=\"chat-bubble agent bg-white\" @click=\"onClickMessage\">\r\n      <div v-if=\"showSender\" class=\"row--agent-block\">\r\n        <Thumbnail\r\n          :src=\"avatarUrl\"\r\n          size=\"20px\"\r\n          :username=\"agentName\"\r\n          :status=\"availabilityStatus\"\r\n        />\r\n        <span v-dompurify-html=\"agentName\" class=\"agent--name\" />\r\n        <span v-dompurify-html=\"companyName\" class=\"company--name\" />\r\n      </div>\r\n      <div\r\n        v-dompurify-html=\"formatMessage(message, false)\"\r\n        class=\"message-content\"\r\n      />\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n.chat-bubble {\r\n  @apply max-w-[85%] cursor-pointer p-4;\r\n}\r\n\r\n.row--agent-block {\r\n  @apply items-center flex text-left pb-2 text-xs;\r\n\r\n  .agent--name {\r\n    @apply font-medium ml-1;\r\n  }\r\n\r\n  .company--name {\r\n    @apply text-n-slate-11 dark:text-n-slate-10 ml-1;\r\n  }\r\n}\r\n</style>\r\n","<script>\r\nimport { mapGetters } from 'vuex';\r\nimport configMixin from '../mixins/configMixin';\r\nimport { ON_UNREAD_MESSAGE_CLICK } from '../constants/widgetBusEvents';\r\nimport FluentIcon from 'shared/components/FluentIcon/Index.vue';\r\nimport UnreadMessage from 'widget/components/UnreadMessage.vue';\r\nimport { isWidgetColorLighter } from 'shared/helpers/colorHelper';\r\nimport { emitter } from 'shared/helpers/mitt';\r\n\r\nexport default {\r\n  name: 'Unread',\r\n  components: {\r\n    FluentIcon,\r\n    UnreadMessage,\r\n  },\r\n  mixins: [configMixin],\r\n  props: {\r\n    messages: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  emits: ['close'],\r\n  computed: {\r\n    ...mapGetters({\r\n      unreadMessageCount: 'conversation/getUnreadMessageCount',\r\n      widgetColor: 'appConfig/getWidgetColor',\r\n    }),\r\n    sender() {\r\n      const [firstMessage] = this.messages;\r\n      return firstMessage.sender || {};\r\n    },\r\n    isBackgroundLighter() {\r\n      return isWidgetColorLighter(this.widgetColor);\r\n    },\r\n  },\r\n  methods: {\r\n    openConversationView() {\r\n      emitter.emit(ON_UNREAD_MESSAGE_CLICK);\r\n    },\r\n    closeFullView() {\r\n      this.$emit('close');\r\n    },\r\n    getMessageContent(message) {\r\n      const { attachments, content } = message;\r\n      const hasAttachments = attachments && attachments.length;\r\n\r\n      if (content) return content;\r\n\r\n      if (hasAttachments) return `ðŸ“‘`;\r\n\r\n      return '';\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"unread-wrap\" dir=\"ltr\">\r\n    <div class=\"close-unread-wrap\">\r\n      <button class=\"button small close-unread-button\" @click=\"closeFullView\">\r\n        <span class=\"flex items-center\">\r\n          <FluentIcon class=\"mr-1\" icon=\"dismiss\" size=\"12\" />\r\n          {{ $t('UNREAD_VIEW.CLOSE_MESSAGES_BUTTON') }}\r\n        </span>\r\n      </button>\r\n    </div>\r\n    <div class=\"unread-messages\">\r\n      <UnreadMessage\r\n        v-for=\"(message, index) in messages\"\r\n        :key=\"message.id\"\r\n        :message-type=\"message.messageType\"\r\n        :message-id=\"message.id\"\r\n        :show-sender=\"!index\"\r\n        :sender=\"message.sender\"\r\n        :message=\"getMessageContent(message)\"\r\n        :campaign-id=\"message.campaignId\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"open-read-view-wrap\">\r\n      <button\r\n        v-if=\"unreadMessageCount\"\r\n        class=\"button clear-button\"\r\n        @click=\"openConversationView\"\r\n      >\r\n        <span\r\n          class=\"flex items-center\"\r\n          :class=\"{\r\n            '!text-n-slate-12': isBackgroundLighter,\r\n          }\"\r\n          :style=\"{\r\n            color: widgetColor,\r\n          }\"\r\n        >\r\n          <FluentIcon class=\"mr-2\" size=\"16\" icon=\"arrow-right\" />\r\n          {{ $t('UNREAD_VIEW.VIEW_MESSAGES_BUTTON') }}\r\n        </span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n.unread-wrap {\r\n  width: 100%;\r\n  height: auto;\r\n  max-height: 100vh;\r\n  background: transparent;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  justify-content: flex-end;\r\n  overflow: hidden;\r\n\r\n  .unread-messages {\r\n    @apply pb-2;\r\n  }\r\n\r\n  .clear-button {\r\n    transition: all 0.3s var(--ease-in-cubic);\r\n    @apply bg-transparent text-n-brand border-none border-0 font-semibold text-base ml-1 py-0 pl-0 pr-2.5 hover:brightness-75 hover:translate-x-1;\r\n  }\r\n\r\n  .close-unread-button {\r\n    transition: all 0.3s var(--ease-in-cubic);\r\n    @apply bg-n-slate-3 dark:bg-n-slate-12 text-n-slate-12 dark:text-n-slate-1 hover:brightness-95 border-none border-0 font-medium text-xxs rounded-2xl mb-3;\r\n  }\r\n}\r\n</style>\r\n"],"names":["_sfc_main","Thumbnail","configMixin","formatMessage","getPlainText","truncateMessage","highlightContent","useMessageFormatter","displayImage","avatarUrl","availableName","availabilityStatus","sender","isEmptyObject","emitter","ON_CAMPAIGN_MESSAGE_CLICK","ON_UNREAD_MESSAGE_CLICK","_hoisted_1","_hoisted_3","_hoisted_4","_hoisted_5","_openBlock","_createElementBlock","_createElementVNode","$options","args","$props","_hoisted_2","_createVNode","_component_Thumbnail","_withDirectives","_createCommentVNode","_directive_dompurify_html","$setup","FluentIcon","UnreadMessage","mapGetters","firstMessage","isWidgetColorLighter","message","attachments","content","hasAttachments","_component_FluentIcon","_createTextVNode","_ctx","_Fragment","_renderList","index","_createBlock","_component_UnreadMessage","_normalizeClass","_normalizeStyle"],"mappings":"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"}