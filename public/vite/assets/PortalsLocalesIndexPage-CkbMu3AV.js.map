{"version":3,"file":"PortalsLocalesIndexPage-CkbMu3AV.js","sources":["../../../app/javascript/dashboard/components-next/HelpCenter/LocaleCard/LocaleCard.vue","../../../app/javascript/dashboard/components-next/HelpCenter/Pages/LocalePage/LocaleList.vue","../../../app/javascript/dashboard/components-next/HelpCenter/Pages/LocalePage/AddLocaleDialog.vue","../../../app/javascript/dashboard/components-next/HelpCenter/Pages/LocalePage/LocalesPage.vue","../../../app/javascript/dashboard/routes/dashboard/helpcenter/pages/PortalsLocalesIndexPage.vue"],"sourcesContent":["<script setup>\r\nimport { computed } from 'vue';\r\nimport { useI18n } from 'vue-i18n';\r\nimport { useToggle } from '@vueuse/core';\r\nimport { LOCALE_MENU_ITEMS } from 'dashboard/helper/portalHelper';\r\n\r\nimport CardLayout from 'dashboard/components-next/CardLayout.vue';\r\nimport Button from 'dashboard/components-next/button/Button.vue';\r\nimport DropdownMenu from 'dashboard/components-next/dropdown-menu/DropdownMenu.vue';\r\n\r\nconst props = defineProps({\r\n  locale: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  isDefault: {\r\n    type: Boolean,\r\n    required: true,\r\n  },\r\n  localeCode: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  articleCount: {\r\n    type: Number,\r\n    required: true,\r\n  },\r\n  categoryCount: {\r\n    type: Number,\r\n    required: true,\r\n  },\r\n});\r\n\r\nconst emit = defineEmits(['action']);\r\n\r\nconst { t } = useI18n();\r\n\r\nconst [showDropdownMenu, toggleDropdown] = useToggle();\r\n\r\nconst localeMenuItems = computed(() =>\r\n  LOCALE_MENU_ITEMS.map(item => ({\r\n    ...item,\r\n    label: t(item.label),\r\n    disabled: props.isDefault,\r\n  }))\r\n);\r\n\r\nconst handleAction = ({ action, value }) => {\r\n  emit('action', { action, value });\r\n  toggleDropdown(false);\r\n};\r\n</script>\r\n\r\n<template>\r\n  <CardLayout>\r\n    <div class=\"flex justify-between gap-2\">\r\n      <div class=\"flex items-center justify-start gap-2\">\r\n        <span\r\n          class=\"text-sm font-medium text-slate-900 dark:text-slate-50 line-clamp-1\"\r\n        >\r\n          {{ locale }} ({{ localeCode }})\r\n        </span>\r\n        <span\r\n          v-if=\"isDefault\"\r\n          class=\"bg-n-alpha-2 h-6 inline-flex items-center justify-center rounded-md text-xs border-px border-transparent text-n-blue-text px-2 py-0.5\"\r\n        >\r\n          {{ $t('HELP_CENTER.LOCALES_PAGE.LOCALE_CARD.DEFAULT') }}\r\n        </span>\r\n      </div>\r\n      <div class=\"flex items-center justify-end gap-4\">\r\n        <div class=\"flex items-center gap-4\">\r\n          <span\r\n            class=\"text-sm text-slate-500 dark:text-slate-400 whitespace-nowrap\"\r\n          >\r\n            {{\r\n              $t(\r\n                'HELP_CENTER.LOCALES_PAGE.LOCALE_CARD.ARTICLES_COUNT',\r\n                articleCount\r\n              )\r\n            }}\r\n          </span>\r\n          <div class=\"w-px h-3 bg-slate-75 dark:bg-slate-800\" />\r\n          <span\r\n            class=\"text-sm text-slate-500 dark:text-slate-400 whitespace-nowrap\"\r\n          >\r\n            {{\r\n              $t(\r\n                'HELP_CENTER.LOCALES_PAGE.LOCALE_CARD.CATEGORIES_COUNT',\r\n                categoryCount\r\n              )\r\n            }}\r\n          </span>\r\n        </div>\r\n        <div\r\n          v-on-clickaway=\"() => toggleDropdown(false)\"\r\n          class=\"relative group\"\r\n        >\r\n          <Button\r\n            icon=\"i-lucide-ellipsis-vertical\"\r\n            color=\"slate\"\r\n            size=\"xs\"\r\n            class=\"rounded-md group-hover:bg-n-alpha-2\"\r\n            @click=\"toggleDropdown()\"\r\n          />\r\n\r\n          <DropdownMenu\r\n            v-if=\"showDropdownMenu\"\r\n            :menu-items=\"localeMenuItems\"\r\n            class=\"ltr:right-0 rtl:left-0 mt-1 xl:ltr:left-0 xl:rtl:right-0 top-full z-60 min-w-[150px]\"\r\n            @action=\"handleAction\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </CardLayout>\r\n</template>\r\n","<script setup>\r\nimport LocaleCard from 'dashboard/components-next/HelpCenter/LocaleCard/LocaleCard.vue';\r\nimport { useStore } from 'dashboard/composables/store';\r\nimport { useAlert, useTrack } from 'dashboard/composables';\r\nimport { useUISettings } from 'dashboard/composables/useUISettings';\r\nimport { useI18n } from 'vue-i18n';\r\nimport { useRoute } from 'vue-router';\r\nimport { PORTALS_EVENTS } from 'dashboard/helper/AnalyticsHelper/events';\r\n\r\nconst props = defineProps({\r\n  locales: {\r\n    type: Array,\r\n    required: true,\r\n  },\r\n  portal: {\r\n    type: Object,\r\n    required: true,\r\n  },\r\n});\r\n\r\nconst store = useStore();\r\nconst { t } = useI18n();\r\nconst route = useRoute();\r\nconst { uiSettings, updateUISettings } = useUISettings();\r\n\r\nconst isLocaleDefault = code => {\r\n  return props.portal?.meta?.default_locale === code;\r\n};\r\n\r\nconst updatePortalLocales = async ({\r\n  newAllowedLocales,\r\n  defaultLocale,\r\n  messageKey,\r\n}) => {\r\n  let alertMessage = '';\r\n  try {\r\n    await store.dispatch('portals/update', {\r\n      portalSlug: props.portal.slug,\r\n      config: {\r\n        default_locale: defaultLocale,\r\n        allowed_locales: newAllowedLocales,\r\n      },\r\n    });\r\n\r\n    alertMessage = t(`HELP_CENTER.PORTAL.${messageKey}.API.SUCCESS_MESSAGE`);\r\n  } catch (error) {\r\n    alertMessage =\r\n      error?.message || t(`HELP_CENTER.PORTAL.${messageKey}.API.ERROR_MESSAGE`);\r\n  } finally {\r\n    useAlert(alertMessage);\r\n  }\r\n};\r\n\r\nconst changeDefaultLocale = ({ localeCode }) => {\r\n  const newAllowedLocales = props.locales.map(locale => locale.code);\r\n  updatePortalLocales({\r\n    newAllowedLocales,\r\n    defaultLocale: localeCode,\r\n    messageKey: 'CHANGE_DEFAULT_LOCALE',\r\n  });\r\n  useTrack(PORTALS_EVENTS.SET_DEFAULT_LOCALE, {\r\n    newLocale: localeCode,\r\n    from: route.name,\r\n  });\r\n};\r\n\r\nconst updateLastActivePortal = async localeCode => {\r\n  const { last_active_locale_code: lastActiveLocaleCode } =\r\n    uiSettings.value || {};\r\n  const defaultLocale = props.portal.meta.default_locale;\r\n\r\n  // Update UI settings only if deleting locale matches the last active locale in UI settings.\r\n  if (localeCode === lastActiveLocaleCode) {\r\n    await updateUISettings({\r\n      last_active_locale_code: defaultLocale,\r\n    });\r\n  }\r\n};\r\n\r\nconst deletePortalLocale = async ({ localeCode }) => {\r\n  const updatedLocales = props.locales\r\n    .filter(locale => locale.code !== localeCode)\r\n    .map(locale => locale.code);\r\n\r\n  const defaultLocale = props.portal.meta.default_locale;\r\n\r\n  await updatePortalLocales({\r\n    newAllowedLocales: updatedLocales,\r\n    defaultLocale,\r\n    messageKey: 'DELETE_LOCALE',\r\n  });\r\n\r\n  await updateLastActivePortal(localeCode);\r\n\r\n  useTrack(PORTALS_EVENTS.DELETE_LOCALE, {\r\n    deletedLocale: localeCode,\r\n    from: route.name,\r\n  });\r\n};\r\n\r\nconst handleAction = ({ action }, localeCode) => {\r\n  if (action === 'change-default') {\r\n    changeDefaultLocale({ localeCode: localeCode });\r\n  } else if (action === 'delete') {\r\n    deletePortalLocale({ localeCode: localeCode });\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <ul role=\"list\" class=\"w-full h-full space-y-4\">\r\n    <LocaleCard\r\n      v-for=\"(locale, index) in locales\"\r\n      :key=\"index\"\r\n      :locale=\"locale.name\"\r\n      :is-default=\"isLocaleDefault(locale.code)\"\r\n      :locale-code=\"locale.code\"\r\n      :article-count=\"locale.articlesCount || 0\"\r\n      :category-count=\"locale.categoriesCount || 0\"\r\n      @action=\"handleAction($event, locale.code)\"\r\n    />\r\n  </ul>\r\n</template>\r\n","<script setup>\r\nimport { ref, computed } from 'vue';\r\nimport { useI18n } from 'vue-i18n';\r\nimport { useStore } from 'dashboard/composables/store';\r\nimport { useAlert, useTrack } from 'dashboard/composables';\r\nimport { useRoute } from 'vue-router';\r\nimport { PORTALS_EVENTS } from 'dashboard/helper/AnalyticsHelper/events';\r\nimport allLocales from 'shared/constants/locales.js';\r\nimport Dialog from 'dashboard/components-next/dialog/Dialog.vue';\r\nimport ComboBox from 'dashboard/components-next/combobox/ComboBox.vue';\r\n\r\nconst props = defineProps({\r\n  portal: {\r\n    type: Object,\r\n    default: () => ({}),\r\n  },\r\n});\r\n\r\nconst { t } = useI18n();\r\nconst store = useStore();\r\nconst route = useRoute();\r\n\r\nconst dialogRef = ref(null);\r\nconst isUpdating = ref(false);\r\n\r\nconst selectedLocale = ref('');\r\n\r\nconst addedLocales = computed(() => {\r\n  const { allowed_locales: allowedLocales = [] } = props.portal?.config || {};\r\n  return allowedLocales.map(locale => locale.code);\r\n});\r\n\r\nconst locales = computed(() => {\r\n  return Object.keys(allLocales)\r\n    .map(key => {\r\n      return {\r\n        value: key,\r\n        label: `${allLocales[key]} (${key})`,\r\n      };\r\n    })\r\n    .filter(locale => !addedLocales.value.includes(locale.value));\r\n});\r\n\r\nconst onCreate = async () => {\r\n  if (!selectedLocale.value) return;\r\n\r\n  isUpdating.value = true;\r\n  const updatedLocales = [...addedLocales.value, selectedLocale.value];\r\n\r\n  try {\r\n    await store.dispatch('portals/update', {\r\n      portalSlug: props.portal?.slug,\r\n      config: {\r\n        allowed_locales: updatedLocales,\r\n        default_locale: props.portal?.meta?.default_locale,\r\n      },\r\n    });\r\n\r\n    useTrack(PORTALS_EVENTS.CREATE_LOCALE, {\r\n      localeAdded: selectedLocale.value,\r\n      totalLocales: updatedLocales.length,\r\n      from: route.name,\r\n    });\r\n\r\n    dialogRef.value?.close();\r\n    useAlert(\r\n      t('HELP_CENTER.LOCALES_PAGE.ADD_LOCALE_DIALOG.API.SUCCESS_MESSAGE')\r\n    );\r\n  } catch (error) {\r\n    useAlert(\r\n      error?.message ||\r\n        t('HELP_CENTER.LOCALES_PAGE.ADD_LOCALE_DIALOG.API.ERROR_MESSAGE')\r\n    );\r\n  } finally {\r\n    isUpdating.value = false;\r\n  }\r\n};\r\n\r\n// Expose the dialogRef to the parent component\r\ndefineExpose({ dialogRef });\r\n</script>\r\n\r\n<template>\r\n  <Dialog\r\n    ref=\"dialogRef\"\r\n    type=\"edit\"\r\n    :title=\"t('HELP_CENTER.LOCALES_PAGE.ADD_LOCALE_DIALOG.TITLE')\"\r\n    :description=\"t('HELP_CENTER.LOCALES_PAGE.ADD_LOCALE_DIALOG.DESCRIPTION')\"\r\n    @confirm=\"onCreate\"\r\n  >\r\n    <div class=\"flex flex-col gap-6\">\r\n      <ComboBox\r\n        v-model=\"selectedLocale\"\r\n        :options=\"locales\"\r\n        :placeholder=\"\r\n          t('HELP_CENTER.LOCALES_PAGE.ADD_LOCALE_DIALOG.COMBOBOX.PLACEHOLDER')\r\n        \"\r\n        class=\"[&>div>button:not(.focused)]:!outline-n-slate-5 [&>div>button:not(.focused)]:dark:!outline-n-slate-5\"\r\n      />\r\n    </div>\r\n  </Dialog>\r\n</template>\r\n","<script setup>\r\nimport { computed, ref } from 'vue';\r\nimport { useMapGetter } from 'dashboard/composables/store.js';\r\n\r\nimport HelpCenterLayout from 'dashboard/components-next/HelpCenter/HelpCenterLayout.vue';\r\nimport Button from 'dashboard/components-next/button/Button.vue';\r\nimport Spinner from 'dashboard/components-next/spinner/Spinner.vue';\r\nimport LocaleList from 'dashboard/components-next/HelpCenter/Pages/LocalePage/LocaleList.vue';\r\nimport AddLocaleDialog from 'dashboard/components-next/HelpCenter/Pages/LocalePage/AddLocaleDialog.vue';\r\n\r\nconst props = defineProps({\r\n  locales: {\r\n    type: Array,\r\n    required: true,\r\n  },\r\n  portal: {\r\n    type: Object,\r\n    default: () => ({}),\r\n  },\r\n});\r\n\r\nconst addLocaleDialogRef = ref(null);\r\n\r\nconst isSwitchingPortal = useMapGetter('portals/isSwitchingPortal');\r\n\r\nconst openAddLocaleDialog = () => {\r\n  addLocaleDialogRef.value.dialogRef.open();\r\n};\r\n\r\nconst localeCount = computed(() => props.locales?.length);\r\n</script>\r\n\r\n<template>\r\n  <HelpCenterLayout :show-pagination-footer=\"false\">\r\n    <template #header-actions>\r\n      <div class=\"flex items-center justify-between\">\r\n        <div class=\"flex items-center gap-4\">\r\n          <span class=\"text-sm font-medium text-slate-800 dark:text-slate-100\">\r\n            {{ $t('HELP_CENTER.LOCALES_PAGE.LOCALES_COUNT', localeCount) }}\r\n          </span>\r\n        </div>\r\n        <Button\r\n          :label=\"$t('HELP_CENTER.LOCALES_PAGE.NEW_LOCALE_BUTTON_TEXT')\"\r\n          icon=\"i-lucide-plus\"\r\n          size=\"sm\"\r\n          @click=\"openAddLocaleDialog\"\r\n        />\r\n      </div>\r\n    </template>\r\n    <template #content>\r\n      <div\r\n        v-if=\"isSwitchingPortal\"\r\n        class=\"flex items-center justify-center py-10 text-n-slate-11\"\r\n      >\r\n        <Spinner />\r\n      </div>\r\n      <LocaleList v-else :locales=\"locales\" :portal=\"portal\" />\r\n    </template>\r\n    <AddLocaleDialog ref=\"addLocaleDialogRef\" :portal=\"portal\" />\r\n  </HelpCenterLayout>\r\n</template>\r\n","<script setup>\r\nimport { computed } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport { useMapGetter } from 'dashboard/composables/store.js';\r\nimport allLocales from 'shared/constants/locales.js';\r\n\r\nimport LocalesPage from 'dashboard/components-next/HelpCenter/Pages/LocalePage/LocalesPage.vue';\r\n\r\nconst route = useRoute();\r\n\r\nconst getPortalBySlug = useMapGetter('portals/portalBySlug');\r\n\r\nconst portal = computed(() => getPortalBySlug.value(route.params.portalSlug));\r\n\r\nconst allowedLocales = computed(() => {\r\n  if (!portal.value) {\r\n    return [];\r\n  }\r\n  const { allowed_locales: allAllowedLocales } = portal.value.config;\r\n  return allAllowedLocales.map(locale => {\r\n    return {\r\n      id: locale?.code,\r\n      name: allLocales[locale?.code],\r\n      code: locale?.code,\r\n      articlesCount: locale?.articles_count || 0,\r\n      categoriesCount: locale?.categories_count || 0,\r\n    };\r\n  });\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LocalesPage :locales=\"allowedLocales\" :portal=\"portal\" />\r\n</template>\r\n"],"names":["props","__props","emit","__emit","t","useI18n","showDropdownMenu","toggleDropdown","useToggle","localeMenuItems","computed","LOCALE_MENU_ITEMS","item","handleAction","action","value","store","useStore","route","useRoute","uiSettings","updateUISettings","useUISettings","isLocaleDefault","code","_b","_a","updatePortalLocales","newAllowedLocales","defaultLocale","messageKey","alertMessage","error","useAlert","changeDefaultLocale","localeCode","locale","useTrack","PORTALS_EVENTS","updateLastActivePortal","lastActiveLocaleCode","deletePortalLocale","updatedLocales","dialogRef","ref","isUpdating","selectedLocale","addedLocales","allowedLocales","locales","allLocales","key","onCreate","_c","_d","__expose","addLocaleDialogRef","isSwitchingPortal","useMapGetter","openAddLocaleDialog","localeCount","getPortalBySlug","portal","allAllowedLocales"],"mappings":"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"}